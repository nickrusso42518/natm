---
# Ask the router what NAT statements are already configured and store them
# in a list of current NATs.
- name: "IOS >> Get current NAT statements"
  cisco.ios.ios_command:
    commands: "show running-config | include ^ip nat name .*"
  register: "CUR_NATS"

# Print the output of the current NATs for debugging, but it will be
# ugly and hard to read. This CUR_NATS variable is never used
# outside of this task file.
- name: "DEBUG >> Print current NAT statements"
  ansible.builtin.debug:
    msg: "{{ CUR_NATS.stdout[0] }}"
    verbosity: 1

# The 'nat' template has the intelligence to determine when changes need
# to be made to the router. The 'save_when' is specified at the group
# or host level and determines how the configuration is saved, if at all.
#
# Notify the "updates exist" handlers when changes occur.
- name: "IOS >> Manage static NAT statements"
  cisco.ios.ios_config:
    src: "../templates/manage_nat.j2"
    save_when: "{{ save_when }}"
    match: "none"
  register: "NAT_CONFIG"
  changed_when: "NAT_CONFIG.updates is defined"
  notify: "updates exist"

# Get the NAT table to determine if the configuration was successful and
# the router installed state entries appropriately. Relying only on the
# configuration is not wise, so this extra verification ensures quality.
# This NAT_TABLE variable is used extensively in the main playbook for
# validation checking.
- name: "IOS >> Get NAT translation table"
  cisco.ios.ios_command:
    commands: "show ip nat translations{{ VRF_STR }}"
  register: "NAT_TABLE"
...
